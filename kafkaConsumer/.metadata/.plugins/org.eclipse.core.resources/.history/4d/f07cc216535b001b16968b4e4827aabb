package consumer;

import java.util.Arrays;
import java.util.Properties;

import org.apache.kafka.clients.consumer.ConsumerRecord;
import org.apache.kafka.clients.consumer.ConsumerRecords;
import org.apache.kafka.clients.consumer.KafkaConsumer;

public class ConsumerMain {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		try {
			  //Kafka consumer configuration settings
		      String topicName = "TestTopic";
		      Properties props = new Properties();
		      
		      props.put("bootstrap.servers", "localhost:9092");
		      props.put("group.id", "test");
		      props.put("enable.auto.commit", "true");
		      props.put("auto.commit.interval.ms", "1000");
		      props.put("session.timeout.ms", "30000");
		      props.put("key.deserializer", 
		         "org.apache.kafka.common.serialization.StringDeserializer");
		      props.put("value.deserializer", 
		         "org.apache.kafka.common.serialization.StringDeserializer");
//		      KafkaConsumer<String, String> consumer = new KafkaConsumer
//		         <String, String>(props);
		      
		      KStreamBuilder builder = new KStreamBuilder();

		      KStream<String, AddressUpdateMessage> addressUpdates = builder
		          .stream("address-updates");

		      KTable<String, SalesTax> salesTaxes = builder
		          .table(Serdes.String(), new SalesTaxSerde(), "sales-taxes");

		      addressUpdates
		          .selectKey((key, value) -> value.getStateCode())
		          .join(salesTaxes, (addressUpdateMessage, salesTax) -> {
		              addressUpdateMessage.setSalesTax(salesTax.getTax());
		              return addressUpdateMessage;
		          })
		          .selectKey((key, value) -> value.getId())
		          .to("address-updates-enriched");

		      KafkaStreams streams = new KafkaStreams(builder, getSettings());
		      streams.start();
		      
		} catch (Exception e) {
			e.getStackTrace();
		}
		
	}
	
	public static void mainConsumer(String[] args) {
		// TODO Auto-generated method stub

		try {
			  //Kafka consumer configuration settings
		      String topicName = "TestTopic";
		      Properties props = new Properties();
		      
		      props.put("bootstrap.servers", "localhost:9092");
		      props.put("group.id", "test");
		      props.put("enable.auto.commit", "true");
		      props.put("auto.commit.interval.ms", "1000");
		      props.put("session.timeout.ms", "30000");
		      props.put("key.deserializer", 
		         "org.apache.kafka.common.serialization.StringDeserializer");
		      props.put("value.deserializer", 
		         "org.apache.kafka.common.serialization.StringDeserializer");
		      KafkaConsumer<String, String> consumer = new KafkaConsumer
		         <String, String>(props);
		      
		      //Kafka Consumer subscribes list of topics here.
		      consumer.subscribe(Arrays.asList(topicName));
		      
		      //print the topic name
		      System.out.println("Subscribed to topic " + topicName);
		      int i = 0;
		      
		      while (true) {
		         ConsumerRecords<String, String> records = consumer.poll(100);
		         for (ConsumerRecord<String, String> record : records)
		         
		         // print the offset,key and value for the consumer records.
		         System.out.printf("offset = %d, key = %s, value = %s\n", 
		            record.offset(), record.key(), record.value());
		      }
		      
		} catch (Exception e) {
			e.getStackTrace();
		}
		
	}

}
